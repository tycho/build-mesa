https://registry.khronos.org/vulkan/specs/latest/man/html/VkQueueFamilyProperties.html

	Queues supporting graphics and/or compute operations MUST report (1,1,1) in
	minImageTransferGranularity, meaning that there are no additional restrictions
	on the granularity of image transfer operations for these queues. Other queues
	supporting image transfer operations are only REQUIRED to support whole mip
	level transfers, thus minImageTransferGranularity for queues belonging to such
	queue families MAY be (0,0,0).

Dozen had this wrong, and had an image transfer granularity that made no sense
for graphics or compute.

diff --git a/src/microsoft/vulkan/dzn_device.c b/src/microsoft/vulkan/dzn_device.c
index 97fd13bed10..f76c5ff8b5e 100644
--- a/src/microsoft/vulkan/dzn_device.c
+++ b/src/microsoft/vulkan/dzn_device.c
@@ -459,7 +459,7 @@ dzn_physical_device_cache_caps(struct dzn_physical_device *pdev)
                        VK_QUEUE_TRANSFER_BIT,
          .queueCount = 4,
          .timestampValidBits = 64,
-         .minImageTransferGranularity = { 0, 0, 0 },
+         .minImageTransferGranularity = { 1, 1, 1 },
       },
       .desc = {
          .Type = D3D12_COMMAND_LIST_TYPE_DIRECT,
@@ -472,7 +472,7 @@ dzn_physical_device_cache_caps(struct dzn_physical_device *pdev)
                        VK_QUEUE_TRANSFER_BIT,
          .queueCount = 8,
          .timestampValidBits = 64,
-         .minImageTransferGranularity = { 0, 0, 0 },
+         .minImageTransferGranularity = { 1, 1, 1 },
       },
       .desc = {
          .Type = D3D12_COMMAND_LIST_TYPE_COMPUTE,
